apiVersion: v1
kind: Secret
metadata:
  name: grafana-conf
  namespace: kube-system
type: Opaque
data:
  grafana.admin.password: c2VjcmV0
  grafana.smtp.password: TWFpbEAyMDE2

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana
  namespace: kube-system
  labels:
    task: monitoring
    app: grafana
spec:
  replicas: 1
  template:
    metadata:
      labels:
        task: monitoring
        app: grafana
      # Comment the following annotation if Dashboard must not be deployed on master
      annotations:
        scheduler.alpha.kubernetes.io/tolerations: |
          [
            {
              "key": "dedicated",
              "operator": "Equal",
              "value": "master",
              "effect": "NoSchedule"
            }
          ]
    spec:
      nodeSelector:
        kubeadm.alpha.kubernetes.io/role: master
      volumes:
      - name: config
        hostPath:
          path: /var/lib/grafana
      containers:
      - name: grafana
        image: grafana/grafana:latest
        imagePullPolicy: Always
        ports:
        - name: api
          containerPort: 3000
        env:
        - name: GF_SMTP_ENABLED
          value: "true"
        - name: GF_SMTP_FROM_ADDRESS
          value: notify@inspireso.org
        - name: GF_SMTP_HOST
          value: smtp.inspireso.org:25
        - name: GF_SMTP_USER
          value: notify@inspireso.org
        - name: GF_SMTP_PASSWORD
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-conf
              key: grafana.admin.password
          valueFrom:
            secretKeyRef:
              name: grafana-conf
              key: grafana.smtp.password
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: config
#          subPath: grafana

---
apiVersion: v1
kind: Service
metadata:
  labels:
    task: monitoring
    app: grafana
    kubernetes.io/cluster-service: "true"
  name: grafana
  namespace: kube-system
spec:
  type: NodePort
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 31336
  selector:
    app: grafana